name: ci

on:
  push:
    branches: [main]

jobs:
  what-changed:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.set-packages.outputs.packages }}
    permissions:
      contents: 'read'
      actions: 'read'
      pull-requests: 'read'
    steps:
      - uses: actions/checkout@v5
      - uses: nrwl/nx-set-shas@v4
        id: setSHAs

      - uses: ./.github/actions/what-changed
        id: set-packages
        with:
          since: ${{ steps.setSHAs.outputs.base }}

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions
      - run: yarn
      - run: yarn publint
      - run: yarn typecheck
      - run: yarn lint
      - run: yarn format

  test:
    runs-on: ubuntu-latest
    needs: [what-changed]
    if: ${{ needs.what-changed.outputs.packages != '[]' }}
    strategy:
      matrix:
        package: ${{ fromJSON(needs.what-changed.outputs.packages) }}

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v4
        with:
          node-version-file: .tool-versions
      - run: yarn workspaces focus hono-middleware @hono/${{ matrix.package }}
      - run: yarn workspaces foreach --topological --recursive --from @hono/${{ matrix.package }} run build
      - run: yarn test --coverage --project @hono/${{ matrix.package }}
        id: test
        if: ${{ matrix.package != 'eslint-config' && matrix.package != 'qwik-city' && matrix.package != 'react-compat' }}
      - uses: codecov/codecov-action@v5
        if: ${{ matrix.package != 'eslint-config' && matrix.package != 'qwik-city' && matrix.package != 'react-compat' }}
        with:
          fail_ci_if_error: true
          directory: ./coverage
          flags: ${{ matrix.package }}
